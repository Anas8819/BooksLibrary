{"ast":null,"code":"import { catchError, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Endpoints } from '../constants/endpoints.constants';\nimport { BaseService } from './base.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BookLibraryService = /*#__PURE__*/(() => {\n  class BookLibraryService extends BaseService {\n    constructor(httpClient, baseUrl) {\n      super();\n      this.httpClient = httpClient;\n      this.bookLibraryApiUrl = environment.ApiBaseUrl.Books;\n    }\n\n    GetBooksList() {\n      const url = `${this.bookLibraryApiUrl}/${Endpoints.GetBooksList}`;\n      return this.httpClient.get(url).pipe(map(book => {\n        return book;\n      }), catchError(this.errorHandler));\n    }\n\n  }\n\n  BookLibraryService.ɵfac = function BookLibraryService_Factory(t) {\n    return new (t || BookLibraryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n\n  BookLibraryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookLibraryService,\n    factory: BookLibraryService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookLibraryService;\n})();","map":null,"metadata":{},"sourceType":"module"}